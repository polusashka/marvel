{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","desciption","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","state","loading","error","marvelService","onCharloaded","setState","onError","updateChar","Math","floor","random","then","catch","tryIt","this","errorMessage","Alert","severity","spinner","LinearProgress","content","onClick","src","mjolnir","alt","Component","View","indexOf","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","arr","i","imgStyle","props","onCharSelected","onKeyPress","e","key","style","renderItems","CircularProgress","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAqBeA,EAnBG,WACd,OACI,yBAAQC,UAAU,cAAlB,UACI,oBAAIA,UAAU,aAAd,SACI,oBAAGC,KAAK,IAAR,UACI,0CADJ,2BAIJ,qBAAKD,UAAU,YAAf,SACI,+BACI,6BAAI,mBAAGC,KAAK,IAAR,0BADR,IAGI,6BAAI,mBAAGA,KAAK,IAAR,+B,yCC0BTC,E,iDAtCXC,SAAW,4C,KACXC,QAAU,0C,KACVC,YAAc,I,KAGdC,Y,uCAAc,WAAOC,GAAP,eAAAC,EAAA,sEACMC,MAAMF,GADZ,WACNG,EADM,QAGDC,GAHC,sBAIA,IAAIC,MAAJ,0BAA6BL,EAA7B,qBAA6CG,EAAIG,SAJjD,uBAOGH,EAAII,OAPP,mF,2DAUdC,iB,sBAAmB,0CAAAP,EAAA,6DAAOQ,EAAP,+BAAgB,EAAKX,YAArB,SACG,EAAKC,YAAL,UAAoB,EAAKH,SAAzB,qCAA8Da,EAA9D,YAAwE,EAAKZ,UADhF,cACTM,EADS,yBAERA,EAAIO,KAAKC,QAAQC,IAAI,EAAKC,sBAFlB,2C,KAKnBC,a,uCAAe,WAAOC,GAAP,eAAAd,EAAA,sEACO,EAAKF,YAAL,UAAoB,EAAKH,SAAzB,sBAA+CmB,EAA/C,YAAqD,EAAKlB,UADjE,cACLM,EADK,yBAEJ,EAAKU,oBAAoBV,EAAIO,KAAKC,QAAQ,KAFtC,2C,2DAKfE,oBAAsB,SAACG,GACnB,MAAO,CACHC,KAAMD,EAAKC,KACXC,WAAYF,EAAKG,YAAL,UAAsBH,EAAKG,YAAYC,MAAM,EAAG,KAAhD,OAA4D,6CACxEC,UAAWL,EAAKK,UAAUC,KAAO,IAAMN,EAAKK,UAAUE,UACtDC,SAAUR,EAAKS,KAAK,GAAGzB,IACvB0B,KAAMV,EAAKS,KAAK,GAAGzB,IACnBe,GAAIC,EAAKD,GACTY,OAAQX,EAAKW,OAAOC,SCnCjB,G,MAAA,IAA0B,qCCUnCC,E,4MAEFC,MAAQ,CACJd,KAAM,GACNe,SAAS,EACTC,OAAO,G,EAOXC,cAAgB,IAAItC,E,EAEpBuC,aAAe,SAAClB,GACZ,EAAKmB,SAAS,CAACnB,OAAMe,SAAS,K,EAGlCK,QAAU,WACN,EAAKD,SAAS,CACVJ,SAAS,EACTC,OAAO,K,EAIfK,WAAa,WACT,IAAMtB,EAAKuB,KAAKC,MAAM,IAAAD,KAAKE,SAAiC,QAC5D,EAAKP,cACAnB,aAAaC,GACb0B,KAAK,EAAKP,cACVQ,MAAM,EAAKN,U,EAGpBO,MAAQ,WACJ,EAAKN,aACL,EAAKF,SAAS,CACVJ,SAAS,K,uDA5BjB,WACIa,KAAKP,e,oBAgCT,WACI,MAA+BO,KAAKd,MAA7Bd,EAAP,EAAOA,KAAMe,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,MAChBa,EAAeb,EAAQ,cAACc,EAAA,EAAD,CAAOC,SAAS,UAAY,KACnDC,EAAUjB,EAAU,cAACkB,EAAA,EAAD,IAAoB,KACxCC,EAAYlB,GAASD,EAAiC,KAAtB,cAAC,EAAD,CAAMf,KAAMA,IAClD,OACI,sBAAKvB,UAAU,aAAf,UACKyD,EACAF,EACAH,EACD,sBAAKpD,UAAU,qBAAf,UACI,oBAAGA,UAAU,oBAAb,wCAC+B,uBAD/B,4CAIA,mBAAGA,UAAU,oBAAb,mCAGA,wBAAQA,UAAU,sBAAlB,SACI,qBAAK0D,QAASP,KAAKD,MAAOlD,UAAU,QAApC,sBAEJ,qBAAK2D,IAAKC,EAASC,IAAI,UAAU7D,UAAU,qC,GA9DtC8D,aAsEnBC,EAAO,SAAC,GAAY,IAAXxC,EAAU,EAAVA,KACJC,EAA+CD,EAA/CC,KAAMC,EAAyCF,EAAzCE,WAAYG,EAA6BL,EAA7BK,UAAWK,EAAkBV,EAAlBU,KAAMF,EAAYR,EAAZQ,SACtC/B,EAAY,kBAIhB,OAHsD,IAAlD4B,EAAUoC,QAAQ,6BAClBhE,EAAY,sBAGZ,sBAAKA,UAAU,oBAAf,UACY,qBAAK2D,IAAK/B,EAAWiC,IAAI,mBAAmB7D,UAAWA,IACvD,sBAAKA,UAAU,mBAAf,UACI,mBAAGA,UAAU,mBAAb,SAAiCwB,IACjC,mBAAGxB,UAAU,oBAAb,SACKyB,IAEL,sBAAKzB,UAAU,mBAAf,UACI,mBAAGC,KAAM8B,EAAU/B,UAAU,sBAA7B,SACI,qBAAKA,UAAU,QAAf,wBAEJ,mBAAGC,KAAMgC,EAAMjC,UAAU,2BAAzB,SACI,qBAAKA,UAAU,QAAf,8BAQjBoC,I,gBC6BA6B,G,kNA9HX5B,MAAQ,CACJ6B,SAAU,GACV5B,SAAS,EACTC,OAAO,EACP4B,gBAAgB,EAChBnD,OAAQ,IACRoD,WAAW,G,EAGf5B,cAAgB,IAAItC,E,EAMpBmE,UAAY,SAACrD,GACT,EAAKsD,oBACL,EAAK9B,cAAczB,iBAAiBC,GAC/BgC,KAAK,EAAKuB,kBACVtB,MAAM,EAAKN,U,EAGpB2B,kBAAoB,WAChB,EAAK5B,SAAS,CACVyB,gBAAgB,K,EAIxBI,iBAAmB,SAACC,GAChB,IAAIC,GAAQ,EACRD,EAAYE,OAAS,IACrBD,GAAQ,GAGZ,EAAK/B,UAAS,gBAAE1B,EAAF,EAAEA,OAAQkD,EAAV,EAAUA,SAAV,MAAyB,CACnCA,SAAS,GAAD,mBAAMA,GAAN,YAAmBM,IAC3BlC,SAAS,EACT6B,gBAAgB,EAChBnD,OAAQA,EAAS,EACjBoD,UAAWK,O,EAInB9B,QAAU,WACN,EAAKD,SAAS,CACVH,OAAO,EACPD,SAAS,K,EAIjBqC,SAAW,G,EAEXC,OAAS,SAACC,GACN,EAAKF,SAASG,KAAKD,I,EAGvBE,YAAc,SAACzD,GACX,EAAKqD,SAASK,SAAQ,SAAAC,GAAI,OAAIA,EAAKC,UAAUC,OAAO,0BACpD,EAAKR,SAASrD,GAAI4D,UAAUE,IAAI,uBAChC,EAAKT,SAASrD,GAAI+D,S,uDAhDtB,WACIlC,KAAKkB,c,yBAoDT,SAAYiB,GAAM,IAAD,OACPnD,EAASmD,EAAInE,KAAI,SAAC8D,EAAMM,GAC1B,IAAIC,EAAW,CAAC,UAAc,SAK9B,MAJuB,wEAAnBP,EAAKrD,YACL4D,EAAW,CAAC,UAAc,UAI1B,qBACIxF,UAAU,aAEV6E,IAAM,EAAKD,OACXlB,QAAS,WACL,EAAK+B,MAAMC,eAAeT,EAAK3D,IAC/B,EAAKyD,YAAYQ,IAErBI,WAAY,SAACC,GACK,MAAVA,EAAEC,KAAyB,UAAVD,EAAEC,MACnB,EAAKJ,MAAMC,eAAeT,EAAK3D,IAC/B,EAAKyD,YAAYQ,KAX7B,UAcQ,qBAAK5B,IAAKsB,EAAKrD,UAAWiC,IAAKoB,EAAKzD,KAAMsE,MAAON,IACjD,qBAAKxF,UAAU,aAAf,SAA6BiF,EAAKzD,SAbjCyD,EAAK3D,OAkBtB,OACI,oBAAItB,UAAU,aAAd,SACKmC,M,oBAKb,WAAU,IAAD,OAEL,EAAsEgB,KAAKd,MAApE6B,EAAP,EAAOA,SAAU5B,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,MAAOvB,EAAjC,EAAiCA,OAAQmD,EAAzC,EAAyCA,eAAgBC,EAAzD,EAAyDA,UAEnDjC,EAAQgB,KAAK4C,YAAY7B,GAEzBd,EAAeb,EAAQ,cAACc,EAAA,EAAD,CAAOC,SAAS,UAAY,KACnDC,EAAUjB,EAAU,cAAC0D,EAAA,EAAD,IAAsB,KAC1CvC,EAAYnB,GAAWC,EAAiB,KAARJ,EAEtC,OACI,sBAAKnC,UAAU,aAAf,UACKoD,EACAG,EACAE,EACD,wBACIzD,UAAU,mCACViG,SAAU9B,EACV2B,MAAO,CAAC,QAAW1B,EAAY,OAAS,SACxCV,QAAS,kBAAM,EAAKW,UAAUrD,IAJlC,SAKI,qBAAKhB,UAAU,QAAf,gC,GAzHG8D,cCWRoC,G,MAjBE,WACb,OACI,qCACI,mBAAGlG,UAAU,eAAb,0DACA,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,kCCLzBmG,G,kNAEF9D,MAAQ,CACJd,KAAM,KACNe,SAAS,EACTC,OAAO,G,EAGXC,cAAgB,IAAItC,E,EAYpBuC,aAAe,SAAClB,GACZ,EAAKmB,SAAS,CAACnB,OAAMe,SAAS,K,EAGlCM,WAAa,WACT,IAAOwD,EAAU,EAAKX,MAAfW,OACFA,GACL,EAAK5D,cACAnB,aAAa+E,GACbpD,KAAK,EAAKP,cACVQ,MAAM,EAAKN,U,uDApBpB,WACIQ,KAAKP,e,gCAGT,SAAmByD,GACXlD,KAAKsC,MAAMW,SAAWC,EAAUD,QAChCjD,KAAKP,e,oBAiBb,WACI,MAA+BO,KAAKd,MAA7Bd,EAAP,EAAOA,KAAMe,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,MAEhB+D,EAAW/E,GAAQe,GAAWC,EAAQ,KAAO,cAAC,EAAD,IAC7Ca,EAAeb,EAAQ,cAACc,EAAA,EAAD,CAAOC,SAAS,UAAY,KACnDC,EAAUjB,EAAU,cAAC0D,EAAA,EAAD,IAAsB,KAC1CvC,EAAYlB,GAASD,IAAYf,EAA8B,KAAtB,cAAC,EAAD,CAAMA,KAAMA,IAC3D,OACI,sBAAKvB,UAAU,aAAf,UACKsG,EACAlD,EACAG,EACAE,S,GA7CMK,cAmDjBC,EAAO,SAAC,GAAY,IAAXxC,EAAU,EAAVA,KACJC,EAAuDD,EAAvDC,KAAMC,EAAiDF,EAAjDE,WAAYG,EAAqCL,EAArCK,UAAWG,EAA0BR,EAA1BQ,SAAUE,EAAgBV,EAAhBU,KAAMC,EAAUX,EAAVW,OAEhDsD,EAAW,CAAC,UAAc,SAK9B,MAJkB,wEAAd5D,IACA4D,EAAW,CAAC,UAAc,YAI1B,qCACI,sBAAKxF,UAAU,eAAf,UACI,qBAAK2D,IAAK/B,EAAWiC,IAAKrC,EAAMsE,MAAON,IACvC,gCACI,qBAAKxF,UAAU,kBAAf,SAAkCwB,IAClC,sBAAKxB,UAAU,aAAf,UACI,mBAAGC,KAAM8B,EAAU/B,UAAU,sBAA7B,SACI,qBAAKA,UAAU,QAAf,wBAEJ,mBAAGC,KAAMgC,EAAMjC,UAAU,2BAAzB,SACI,qBAAKA,UAAU,QAAf,6BAKhB,qBAAKA,UAAU,cAAf,SACKyB,IAEL,qBAAKzB,UAAU,eAAf,qBACA,qBAAIA,UAAU,oBAAd,UACKkC,EAAOwC,OAAS,EAAI,KAAO,yCAExBxC,EAAOf,KAAI,SAAC8D,EAAMM,GAEd,KAAIA,EAAI,GACR,OACI,oBAAYvF,UAAU,oBAAtB,SACKiF,EAAKzD,MADD+D,aAYtBY,IC1GA,MAA0B,mCCuC1BI,E,4MA5BXlE,MAAQ,CACJmE,aAAc,M,EAGlBd,eAAiB,SAACpE,GACd,EAAKoB,SAAS,CACV8D,aAAclF,K,4CAKtB,WACI,OACI,sBAAKtB,UAAU,MAAf,UACI,cAAC,EAAD,IACA,iCACI,cAAC,EAAD,IACA,sBAAKA,UAAU,gBAAf,UACI,cAAC,EAAD,CAAU0F,eAAgBvC,KAAKuC,iBAC/B,cAAC,EAAD,CAAUU,OAAQjD,KAAKd,MAAMmE,kBAEjC,qBAAKxG,UAAU,gBAAgB2D,IAAK8C,EAAY5C,IAAI,qB,GAvBtDC,a,MCDlB4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5f3e8907.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","class MarvelService {\r\n\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=d892d0cf12c9f63c5fb7a4cf5400e9af';\r\n    _baseOffset = 210;\r\n\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok){\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`); \r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);   \r\n        return this._transformCharacter(res.data.results[0]); \r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            name: char.name,\r\n            desciption: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            id: char.id,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\n\nimport { LinearProgress } from \"@mui/material\";\nimport { Alert } from \"@mui/material\";\n\nimport MarvelService from '../../services/MarvelService';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\n\nclass RandomChar extends Component  {\n\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    marvelService = new MarvelService();\n\n    onCharloaded = (char) => {\n        this.setState({char, loading: false})\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharloaded)\n            .catch(this.onError);\n    }\n\n    tryIt = () => {\n        this.updateChar();\n        this.setState({\n            loading: true\n        })\n    }\n\n\n    render () {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <Alert severity=\"error\"/> : null;\n        const spinner = loading ? <LinearProgress/> : null;\n        const content = !(error || loading) ? <View char={char}/> : null;\n        return (\n            <div className=\"randomchar\">\n                {content}\n                {spinner}\n                {errorMessage}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div onClick={this.tryIt} className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst View = ({char}) => {\n    const {name, desciption, thumbnail, wiki, homepage} = char;\n    let className = \"randomchar__img\"\n    if (thumbnail.indexOf('image_not_available.jpg') !== -1) {\n        className = \"randomchar__imgunk\"\n    }\n    return (\n        <div className=\"randomchar__block\">\n                    <img src={thumbnail} alt=\"Random character\" className={className}/>\n                    <div className=\"randomchar__info\">\n                        <p className=\"randomchar__name\">{name}</p>\n                        <p className=\"randomchar__descr\">\n                            {desciption}\n                        </p>\n                        <div className=\"randomchar__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n    )\n}\n\nexport default RandomChar;","import {Component} from 'react';\n\nimport { Alert } from \"@mui/material\";\nimport { CircularProgress } from '@mui/material';\n\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n    \n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n    \n\n\n    renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    key={item.id}\n                    ref ={this.setRef}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id);\n                        this.focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            this.props.onCharSelected(item.id);\n                            this.focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const {charList, loading, error, offset, newItemLoading, charEnded} = this.state;\n        \n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <Alert severity=\"error\"/> : null;\n        const spinner = loading ? <CircularProgress/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\n\nimport { Alert } from \"@mui/material\";\nimport { CircularProgress } from '@mui/material';\nimport Skeleton from '../skeleton/Skeleton';\nimport './charInfo.scss';\nimport MarvelService from '../../services/MarvelService';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps){\n        if (this.props.charId !== prevProps.charId){\n            this.updateChar();\n        }\n    }\n\n    onCharloaded = (char) => {\n        this.setState({char, loading: false})\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if (!charId)return;\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharloaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton/>;\n        const errorMessage = error ? <Alert severity=\"error\"/> : null;\n        const spinner = loading ? <CircularProgress/> : null;\n        const content = !(error || loading || !char) ? <View char={char}/> : null;\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, desciption, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {desciption}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }                \n            </ul>\n        </>\n    )\n}\n\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n        \n    }\n\n    render () {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <RandomChar/>\n                    <div className=\"char__content\">\n                        <CharList onCharSelected={this.onCharSelected}/>\n                        <CharInfo charId={this.state.selectedChar}/>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}